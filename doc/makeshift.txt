*makeshift.txt*	Plugin for detecting your build system.

                                                                   *makeshift*
>
         __  __       _             _     _  __ _
        |  \/  | __ _| | _____  ___| |__ (_)/ _| |_
        | |\/| |/ _` | |/ / _ \/ __| '_ \| | |_| __|
        | |  | | (_| |   <  __/\__ \ | | | |  _| |_
        |_|  |_|\__,_|_|\_\___||___/_| |_|_|_|  \__|
<
==============================================================================

INTRODUCTION                                                 *makeshift-intro*

You'll want to use this plugin if you work on a lot of projects with different
build systems. You want your editor to be able to detect your current build
system and set |'makeprg'| accordingly.

To make building really fast, map the |:make| command to a function key in
your |vimrc|. >

    nnoremap <F5> :<C-U>make<CR>
<

==============================================================================

HOW IT WORKS                                                   *makeshift-how*
                                                               *makeshift-cmd*
                                                                  *:Makeshift*

This plug-in works by looking for known build files in the current working
directory upwards, and sets |'makeprg'|; by default this happens on start-up.
You can use the command to re-evaluate |'makeprg'|: >

    :Makeshift
<
                                                            *b:makeshift_root*

Sometimes your build script won't be in the current working directory, this is
particularly common when |'autochdir'| is set. For this reason |:Makeshift|
sets `b:makeshift_root` to be the directory containing the build script that
it used to determine the build system.

                                                             *:MakeshiftBuild*

|:MakeshiftBuild| is a wrapper around Vim's own |:make| command, which changes
directory to |b:makeshift_root| before calling |:make| with any arguments you
provide and then returns to your working directory. If you often work in
subdirectories, you may want to map the |:MakeshiftBuild| command to a
function key in your |vimrc|. >

    nnoremap <F5> :<C-U>MakeshiftBuild<CR>
    nnoremap <F6> :<C-U>MakeshiftBuild check<CR>
    ...
<
Alternatively you can use the |makeshift_chdir| option to automatically change
the current working directory to the one containing your build script.

                                                            *:LMakeshiftBuild*

|:LMakeshiftBuild| is the same as |:MakeshiftBuild|, but wraps |:lmake|
instead of |:make|.

==============================================================================

SETTINGS                                                  *makeshift-settings*

To tune the behaviour of this plugin, add any of the following switches to
your |vimrc|.
                                                      *'makeshift_on_startup'*

To prevent Makeshift from setting |'makeprg'| on start-up: >

    let g:makeshift_on_startup = 0
<
                                                      *'makeshift_on_bufread'*

To prevent Makeshift from setting |'makeprg'| on |BufRead|: >

    let g:makeshift_on_bufread = 0
<
                                                   *'makeshift_on_bufnewfile'*

To prevent Makeshift from setting |'makeprg'| on |BufNewFile|: >

    let g:makeshift_on_bufnewfile = 0
<
                                                      *'makeshift_on_bufenter'*

To prevent Makeshift from setting |'makeprg'| on |BufEnter|: >

    let g:makeshift_on_bufenter = 0
<
                                                           *'makeshift_chdir'*

To automatically change directory to 'b:makeshift_root' when it is discovered:
>
    let g:makeshift_chdir = 1
<
                                                   *'makeshift_use_pwd_first'*

To try the build file in the current directory before searching from the file
directory: >

    let g:makeshift_use_pwd_first = 1
<
                                                   *'makeshift_find_bundled'*

To enable search for bundled build program/script: >

    let g:makeshift_find_bundled = 1

==============================================================================

BUILD SYSTEMS                                              *makeshift-systems*

Makeshift currently associates the following files with their build systems:

    * Jamfile: bjam
    * Makefile: make
    * Rakefile: rake
    * SConstruct: scons
    * build.gradle: gradle
    * build.xml: ant
    * mix.exs: mix
    * pom.xml: mvn
    * build.ninja: ninja
    * wscript: waf

==============================================================================

ADDING A NEW BUILD SYSTEM                                   *makeshift-adding*
                                                        *makeshift-overriding*
                                                         *'makeshift_systems'*

If Makeshift doesn't already know about your build system, or you wish to
override the default program for a given file, you can define a dictionary,
which has filenames as keys and corresponding programs as values. >
    let g:makeshift_systems = {
        \'build.sbt ': 'sbt',
        \}
<

==============================================================================

REMOVING A BUILD SYSTEM                                   *makeshift-removing*
                                                         *'makeshift_ignored'*

If you don't want Makeshift to set |'makeprg'| for a given build system, you
can disable it by defining a list of the files to ignore. >
    let g:makeshift_ignored = ['Jamfile']
<
==============================================================================

ABOUT                                                        *makeshift-about*

Makeshift was written by Pete Johns. You can contact him via
http://johnsy.com/ or on Twitter where he masquerades as @johnsyweb.

You can grab the latest version of this plugin, submit an improvement or
report a bug on GitHub:

    http://github.com/johnsyweb/vim-makeshift/

==============================================================================

LICENSE                                                    *makeshift-license*

Makeshift is licensed under the same terms as Vim itself (see |license|).

 vim: tw=78:ts=8:ft=help:norl
